---
# $ fly -t target sp -p scripting-langs -c scripting-langs.yml -l ~/sec/credentials-test.yml
resources:
- name: alpine-cache
  type: docker-image
  source:
    repository: alpine
    tag: latest
    registry_mirror: https://((registry-mirror-domain))
    ca_certs:
    - domain: ((registry-mirror-domain))
      cert: ((docker-reg-ca-cert))
  check_every: 12h  # default: 1m
- name: perl-cache
  type: docker-image
  source:
    repository: whitestar/perl  # Compressed size: 12MB
    tag: latest
    #repository: perl
    #tag: 5  # Very large, compressed size: 260MB
    registry_mirror: https://((registry-mirror-domain))
    ca_certs:
    - domain: ((registry-mirror-domain))
      cert: ((docker-reg-ca-cert))
  check_every: 12h  # default: 1m
- name: php-cache
  type: docker-image
  source:
    repository: php
    tag: 5-zts-alpine  # Compressed size: 23MB
    registry_mirror: https://((registry-mirror-domain))
    ca_certs:
    - domain: ((registry-mirror-domain))
      cert: ((docker-reg-ca-cert))
  check_every: 12h  # default: 1m
- name: python-cache
  type: docker-image
  source:
    repository: whitestar/python  # Compressed size: 21MB
    tag: latest
    #repository: python
    #tag: 3  # Very large, compressed size: 270MB
    registry_mirror: https://((registry-mirror-domain))
    ca_certs:
    - domain: ((registry-mirror-domain))
      cert: ((docker-reg-ca-cert))
  check_every: 12h  # default: 1m
- name: ruby-cache
  type: docker-image
  source:
    repository: ruby
    tag: 2-alpine  # Compressed size: 28MB
    registry_mirror: https://((registry-mirror-domain))
    ca_certs:
    - domain: ((registry-mirror-domain))
      cert: ((docker-reg-ca-cert))
  check_every: 12h  # default: 1m

jobs:
- name: hello-world
  plan:
  - aggregate:
    - do:
      - get: alpine-cache
      - task: hello-shell
        image: alpine-cache
        params:
          HELLO: Hello Shell!
        config:
          platform: linux
          run:
            path: sh
            args:
            - -c
            - |
              echo $HELLO;
    - do:
      - get: perl-cache
      - task: hello-perl
        image: perl-cache
        params:
          HELLO: Hello Perl!
        config:
          platform: linux
          run:
            path: perl
            args:
            - -e
            - |
              print "$]\n";
              print "$ENV{'HELLO'}\n";
    - do:
      - get: php-cache
      - task: hello-php
        image: php-cache
        params:
          HELLO: Hello PHP!
        config:
          platform: linux
          run:
            path: php
            args:
            - -r
            - |
              print phpversion() . "\n";
              print getenv('HELLO') . "\n";
    - do:
      - get: python-cache
      - task: hello-python
        image: python-cache
        params:
          HELLO: Hello Python!
        config:
          platform: linux
          run:
            path: python3
            args:
            - -c
            - |
              import platform
              import os
              print(platform.python_version())
              print(os.environ['HELLO'])
    - do:
      - get: ruby-cache
      - task: hello-ruby
        image: ruby-cache
        params:
          HELLO: Hello Ruby!
        config:
          platform: linux
          run:
            path: ruby
            args:
            - -e
            - |
              puts RUBY_VERSION
              puts ENV['HELLO']
